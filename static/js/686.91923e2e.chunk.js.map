{"version":3,"file":"static/js/686.91923e2e.chunk.js","mappings":"wRAqEA,EA1DqB,WACjB,OAA6BA,EAAAA,EAAAA,IAAiB,SAAAC,GAAK,OAAIA,EAAMC,cAAtDC,EAAP,EAAOA,KAAKC,EAAZ,EAAYA,MAAMC,EAAlB,EAAkBA,QAClB,GAAwCC,EAAAA,EAAAA,KAAjCC,EAAP,EAAOA,gBAAgBC,EAAvB,EAAuBA,cACjBC,GAAUC,EAAAA,EAAAA,MAEhB,GAKIC,EAAAA,EAAAA,IAAe,CACfC,UAAUC,EAAAA,EAAAA,GAAYC,EAAAA,GACtBC,cAAeZ,IANfa,EADJ,EACIA,SACAC,EAFJ,EAEIA,aAEaC,GAJjB,EAGIC,MAHJ,EAIIC,UAAaF,QAcjB,OAAGb,GACQ,SAAC,KAAD,IAGRD,GACQ,wBAAKA,KAIZ,iBAAKiB,UAAU,YAAf,WACI,uCACA,SAAC,KAAD,CACIJ,aAAcA,EACdK,SArBK,SAACC,GACd,IAAMC,EAAgBC,IAAOF,EAAKG,WAAY,kBAAkBC,SAASC,MAAM,EAAG,IAC5EC,GAAO,kBAAON,GAAP,IAAaG,WAAYF,IACtCjB,EAAgBsB,EAAS1B,EAAK2B,IAC9BtB,IACAC,EAAQsB,KAAK,MAiBLf,SAAUA,EACVE,OAAQA,EAJZ,UAMI,gBAAKG,UAAU,OAAf,UACI,SAAC,KAAD,CACIW,OAAO,OACPC,MAAM,UACNC,gBAAgB,UAChBC,MAAM,QACNC,OAAO,OACPC,KAAK,SACLC,OAAO,MACPC,SAAS,YACTC,QAAQ,uB,mEC3DnB1B,EAAmB2B,EAAAA,KAAaC,MAAM,CAC/CC,WAAYF,EAAAA,KACPG,SAAS,0BACTC,IAAI,IAAK,6CACdC,UAAWL,EAAAA,KACNG,SAAS,yBACTC,IAAI,IAAK,4CACdnB,WAAYe,EAAAA,KACPG,SAAS,0BACdG,OAAQN,EAAAA,KACHG,SAAS,sBACdI,UAAWP,EAAAA,KACNG,SAAS,yBACTC,IAAI,KAAM,6CACfI,IAAKR,EAAAA,KACAG,SAAS,mBACTC,IAAI,IAAK","sources":["pages/userEditPage/UserEditPage.tsx","validations/formValidation.ts"],"sourcesContent":["import React, {useEffect, useState} from 'react';\nimport { useForm } from 'react-hook-form';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport {Button, LoadingSpinner, UserForm} from \"../../components\";\nimport {validationSchema} from \"../../validations/formValidation\";\nimport {IUser} from \"../../models/IUser\";\nimport {useActions} from \"../../hooks/useActions\";\nimport {UseTypedSelector} from \"../../hooks/useTypedSelector\";\nimport moment from \"moment\";\nimport {useHistory} from \"react-router-dom\";\n\nconst UserEditPage = () => {\n    const {user,error,loading} = UseTypedSelector(state => state.userDetail);\n    const {fetchUpdateUser,fetchAllUsers} = useActions();\n    const history = useHistory();\n\n    const {\n        register,\n        handleSubmit,\n        reset,\n        formState: { errors }\n    } = useForm<IUser>({\n        resolver: yupResolver(validationSchema),\n        defaultValues: user,\n    });\n\n    const onSubmit = (data: IUser) => {\n        const formattedDate = moment(data.birth_date, 'YYYY[-MM[-DD]]').format().slice(0, 10)\n        const newData = {...data, birth_date: formattedDate};\n        fetchUpdateUser(newData, user.id);\n        fetchAllUsers();\n        history.push('/')\n    };\n\n    if(loading){\n        return <LoadingSpinner/>\n    }\n\n    if(error){\n        return <h1>{error}</h1>\n    }\n\n    return (\n        <div className='container'>\n            <h1>Edit User</h1>\n            <UserForm\n                handleSubmit={handleSubmit}\n                onSubmit={onSubmit}\n                register={register}\n                errors={errors}\n            >\n                <div className=\"mt-5\">\n                    <Button\n                        border=\"none\"\n                        color=\"#ffffff\"\n                        backgroundColor=\"#2d8dd6\"\n                        width=\"150px\"\n                        height=\"auto\"\n                        type='submit'\n                        radius=\"5px\"\n                        children=\"Edit user\"\n                        padding='10px 20px'\n                    />\n                </div>\n            </UserForm>\n        </div>\n    );\n};\n\nexport default UserEditPage;\n","import * as Yup from \"yup\";\n\nexport const validationSchema = Yup.object().shape({\n    first_name: Yup.string()\n        .required('First Name is required')\n        .max(256, 'First Name must not exceed 256 characters'),\n    last_name: Yup.string()\n        .required('Last Name is required')\n        .max(256, 'Last Name must not exceed 256 characters'),\n    birth_date: Yup.date()\n        .required('Birth Date is required'),\n    gender: Yup.string()\n        .required('Gender is required'),\n    biography: Yup.string()\n        .required('Biography is required')\n        .max(1024, 'Biography must not exceed 1024 characters'),\n    job: Yup.string()\n        .required('Job is required')\n        .max(256, 'Job must not exceed 256 characters'),\n});\n"],"names":["UseTypedSelector","state","userDetail","user","error","loading","useActions","fetchUpdateUser","fetchAllUsers","history","useHistory","useForm","resolver","yupResolver","validationSchema","defaultValues","register","handleSubmit","errors","reset","formState","className","onSubmit","data","formattedDate","moment","birth_date","format","slice","newData","id","push","border","color","backgroundColor","width","height","type","radius","children","padding","Yup","shape","first_name","required","max","last_name","gender","biography","job"],"sourceRoot":""}